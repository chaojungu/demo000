<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd">

    <!--1） 创建DataSource（数据库连接池）对象-->
<!--    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/smbms"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean> -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/userauth"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!--2） 创建SqlSessionFactory对象-->
    <bean name="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <!--注入dataSource-->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml" />
        <property name="plugins">
            <array>
                <bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor" />
            </array>
        </property>
        <property name="configuration">
            <bean class="com.baomidou.mybatisplus.core.MybatisConfiguration">
                <property name="logImpl" value="org.apache.ibatis.logging.log4j.Log4jImpl" />
            </bean>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.t09.auth.sys.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--1) 在spring的配置文件中定义一个事务管理器-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--2） 定义事务规则 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED"
                       isolation="READ_COMMITTED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="insert*"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!--定义切入点-->
        <aop:pointcut id="servicePointCut" expression="execution(* cn.t09.auth.sys.service..*.*(..))"/>
        <!--把切入点和上面的事务关联在一起-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointCut"/>
    </aop:config>

    <context:component-scan base-package="cn.t09.auth.sys.service" />
    <context:component-scan base-package="cn.t09.auth.sys.mybatis.plus" />

</beans>